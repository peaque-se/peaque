import { buildFrontendEntryModule } from "../../src/compiler/frontend-entry.js"

describe("buildFrontendEntryModule", () => {
  it("creates a component entry without strict mode", () => {
    const source = buildFrontendEntryModule({
      headerComment: "Test Suite",
      routerSource: "const router = {} as any",
      componentImports: [
        { identifier: "HomePage", importPath: "./src/pages/home/index.tsx" },
      ],
      specialPages: {
        loading: { identifier: "Loading", importPath: "./src/pages/loading.tsx" },
      },
      strictMode: false,
      renderMode: "component",
      routerModule: "@peaque/framework",
    })

    expect(source).toContain("// Auto-generated by Test Suite")
    expect(source).toContain('import HomePage from "./src/pages/home/index.tsx";')
    expect(source).not.toContain("StrictMode")
    expect(source).toContain("loading: <Loading />,")
    expect(source).toContain("export default function()")
    expect(source).toContain("<Router {...conf} />")
  })

  it("includes createRoot and StrictMode for bootstrap builds", () => {
    const source = buildFrontendEntryModule({
      headerComment: "Prod Builder",
      routerSource: "const router = {} as any",
      componentImports: [
        { identifier: "Loading", importPath: "./src/pages/loading.tsx" },
      ],
      specialPages: {
        loading: { identifier: "Loading", importPath: "./src/pages/loading.tsx" },
      },
      strictMode: true,
      renderMode: "bootstrap",
      routerModule: "@peaque/framework",
    })

    const occurrences = source.match(/import Loading from "\.\/src\/pages\/loading\.tsx";/g) ?? []
    expect(occurrences).toHaveLength(1)
    expect(source).toContain('import { StrictMode } from "react"')
    expect(source).toContain('import { createRoot } from "react-dom/client"')
    expect(source).toContain("createRoot(document.getElementById('peaque')!).render(<StrictMode><Router {...conf} /></StrictMode>)")
  })
})
